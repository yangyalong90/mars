server:
  port: 8081
  servlet:
    context-path: /api

system:
  shiro:
    login: /login
    logout: /logout
mybatis-plus:
  mapper-locations:
    - classpath:mappers/*.xml
spring:
  datasource:
    url: jdbc:mysql://47.105.77.138:3306/mars?useUnicode=true&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: password
    type: com.alibaba.druid.pool.DruidDataSource
  kafka:
    producer:
      bootstrap-servers:
        - 47.105.77.138:9092
      retries: 1
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
    consumer:
      bootstrap-servers:
        - 47.105.77.138:9092
      group-id: yyl-test-1
      enable-auto-commit: false
      auto-offset-reset: earliest
    listener:
      # listner负责ack，每调用一次，就立即commit
      ack-mode: MANUAL_IMMEDIATE
      # 在侦听器容器中运行的线程数。
      concurrency: 5

  redis:
    database: 0
    host: 47.105.77.138
    port: 6379
    password:

redisson:
  address: redis://${spring.redis.host}:${spring.redis.port}
  password: ${spring.redis.password}


